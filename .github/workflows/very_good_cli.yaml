name: very_good_cli

on:
  pull_request:
    paths:
      - ".github/workflows/very_good_cli.yaml"
      - "lib/**"
      - "test/**"
      - "pubspec.yaml"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/very_good_cli.yaml"
      - "lib/**"
      - "test/**"
      - "pubspec.yaml"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.1.0

      - uses: subosito/flutter-action@v2.8.0

      - name: Install Dependencies
        run: flutter pub get

      - name: Format
        run: flutter format --set-exit-if-changed .

      - name: Analyze
        run: flutter analyze lib test

      - name: Verify Build
        run: flutter pub run test --run-skipped -t pull-request-only

      - name: Run Tests
        run: |
          flutter pub global activate coverage 1.2.0
          flutter pub run test -j 1 -x pull-request-only -x e2e --coverage=coverage --test-randomize-ordering-seed random && dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --packages=.dart_tool/package_config.json --report-on=lib

      - name: Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2.1.0

  e2e:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.1.0

      - uses: subosito/flutter-action@v2.8.0

      - name: Install LCOV
        run: sudo apt-get install -y lcov

      - name: Install Dependencies
        run: flutter pub get

      - name: Run Tests
        run: flutter pub run test --run-skipped -t e2e

  pana:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.1.0

      - uses: subosito/flutter-action@v2.8.0

      - name: Install Dependencies
        run: |
          flutter packages get
          flutter pub global activate pana

      - name: Verify Pub Score
        run: |
          PANA=$(pana . --no-warning); PANA_SCORE=$(echo $PANA | sed -n "s/.*Points: \([0-9]*\)\/\([0-9]*\)./\1\/\2/p")
          echo "score: $PANA_SCORE"
          IFS='/'; read -a SCORE_ARR <<< "$PANA_SCORE"; SCORE=SCORE_ARR[0]; TOTAL=SCORE_ARR[1]
          if (( $SCORE < $TOTAL )); then echo "minimum score not met!"; exit 1; fi
